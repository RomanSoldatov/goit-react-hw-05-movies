{"version":3,"file":"static/js/244.0d5214d4.chunk.js","mappings":"4OAEaA,EAAgBC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,47BAoDzBC,EAAcH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uDAKxBG,EAAaL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wM,6CCCnC,EAjDkB,SAAHK,GAAmB,IAAbC,EAAKD,EAALC,MACbC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,QAAS,CAACC,EAAAA,GAAYC,EAAAA,IACtBC,YAAY,EACZC,gBAAgB,EAChBC,MAAM,EACNC,cAAe,OACfC,YAAa,CACX,IAAK,CACHD,cAAe,EACfE,aAAc,GAEhB,IAAK,CACHF,cAAe,EACfE,aAAc,IAEhB,KAAM,CACJF,cAAe,EACfE,aAAc,KAGlBC,YAAU,EACVC,WAAY,CAAEC,WAAW,GAAOC,SAE/BjB,EAAMkB,KAAI,SAAAC,GAAK,OACdhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAW,CAAAH,UACVd,EAAAA,EAAAA,KAACZ,EAAa,CAAA0B,UACZI,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaL,EAAMM,IAAMC,MAAO,CAAEC,KAAM1B,GAAWgB,SAAA,EACzDd,EAAAA,EAAAA,KAACR,EAAW,CAAAsB,UACVd,EAAAA,EAAAA,KAAA,OACEyB,IACET,EAAMU,YAAW,sCAAAL,OACyBL,EAAMU,aAAW,OAAAL,OAChDM,EAAW,KAExBC,IAAKZ,EAAMa,eACXC,MAAM,WAGVZ,EAAAA,EAAAA,MAACxB,EAAU,CAAAoB,SAAA,CAAC,IAAEE,EAAMe,MAAM,aAddf,EAAMM,GAiBV,KAItB,C,2MCxDaU,EAAO3C,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yTAkBlB0C,GAAO5C,EAAAA,EAAAA,IAAO6C,EAAAA,IAAP7C,CAAgBI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kH,SClBvB4C,EAAa,SAAHvC,GAA6B,IAAvBwC,EAAKxC,EAALwC,MAAOC,EAAQzC,EAARyC,SAKlC,OACEnB,EAAAA,EAAAA,MAACc,EAAI,CAACM,SALa,SAAAC,GACnBA,EAAEC,gBACJ,EAG+B1B,SAAA,EAC3Bd,EAAAA,EAAAA,KAAA,MAAAc,SAAI,kBACJd,EAAAA,EAAAA,KAACyC,EAAAA,cAAa,CACZC,KAAK,OACLC,gBAAiB,IACjBP,MAAOA,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEK,OAAOR,MAAM,EACvCT,YAAY,eAEd3B,EAAAA,EAAAA,KAACiC,EAAI,MAGX,E,UCiCA,EA7Ce,WACb,IAAAY,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAYF,EAAaG,IAAI,UAAY,GAC/CC,GAA8BZ,EAAAA,EAAAA,WAAS,GAAMa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAsB1B,OAfAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAM,eAAAnE,GAAAoE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEM,OAFNF,EAAAC,KAAA,EAEXR,GAAW,GAAMO,EAAAE,KAAA,GACIC,EAAAA,EAAAA,IAAaf,GAAW,KAAD,EAAtCW,EAAMC,EAAAI,KACZtB,EAAiBiB,GAAQC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEzBM,QAAQC,MAAKP,EAAAK,IAAQ,QAEH,OAFGL,EAAAC,KAAA,GAErBR,GAAW,GAAOO,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,wBAErB,kBAVW,OAAAtE,EAAAkF,MAAA,KAAAC,UAAA,KAWZhB,GACF,GAAG,CAACP,KAGFxD,EAAAA,EAAAA,KAAA,OAAAc,UACEI,EAAAA,EAAAA,MAAC8D,EAAAA,EAAa,CAACC,UAAU,UAAUC,eAAe,UAASpE,SAAA,EACzDd,EAAAA,EAAAA,KAACmC,EAAU,CAACC,MAAOoB,EAAWnB,SAvBV,SAAA8C,GAExB5B,EAD6B,KAAV4B,GAAgB,CAAEA,MAAAA,GAEvC,IAqBOvB,GACC5D,EAAAA,EAAAA,KAACoF,EAAAA,EAAQ,CACPC,MAAO,GACPC,MAAO,CAAEC,OAAQ,GAAIzD,MAAO,IAAK0D,UAAW,MAEnB,IAAzBvC,EAAcwC,QAAgBjC,GAChCxD,EAAAA,EAAAA,KAAA,MAAAc,SAAI,gCAEJd,EAAAA,EAAAA,KAAC0F,EAAAA,EAAS,CAAC7F,MAAOoD,QAK5B,C,mMCjDA0C,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CACNC,QALY,mCAMZC,SAAU,UAIDC,EAAmB,eAAAnG,GAAAoE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA8B,EAAA,OAAA/B,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACVqB,EAAAA,EAAAA,IAAU,qBAAsBC,GAAQ,KAAD,EAAhD,OAARI,EAAQ5B,EAAAI,KAAAJ,EAAA6B,OAAA,SACPD,EAASE,KAAKC,SAAO,wBAAA/B,EAAAS,OAAA,GAAAX,EAAA,KAC7B,kBAH+B,OAAAtE,EAAAkF,MAAA,KAAAC,UAAA,KAKnBqB,EAAiB,eAAAC,GAAArC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAqC,EAAMC,GAAO,IAAAP,EAAA,OAAA/B,IAAAA,MAAA,SAAAuC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cAAAkC,EAAAlC,KAAA,EACrBqB,EAAAA,EAAAA,IAAU,UAADtE,OAAWkF,GAAWX,GAAQ,KAAD,EAA/C,OAARI,EAAQQ,EAAAhC,KAAAgC,EAAAP,OAAA,SACPD,EAASE,MAAI,wBAAAM,EAAA3B,OAAA,GAAAyB,EAAA,KACrB,gBAH6BG,GAAA,OAAAJ,EAAAvB,MAAA,KAAAC,UAAA,KAKjBR,EAAY,eAAAmC,GAAA1C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA0C,EAAMnD,GAAS,IAAAwC,EAAA,OAAA/B,IAAAA,MAAA,SAAA2C,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EAClBqB,EAAAA,EAAAA,IAAU,uBAADtE,OAAwBmC,GAAaoC,GAAQ,KAAD,EAA9D,OAARI,EAAQY,EAAApC,KAAAoC,EAAAX,OAAA,SACPD,EAASE,KAAKC,SAAO,wBAAAS,EAAA/B,OAAA,GAAA8B,EAAA,KAC7B,gBAHwBE,GAAA,OAAAH,EAAA5B,MAAA,KAAAC,UAAA,KAKZ+B,EAAc,eAAAC,GAAA/C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA+C,EAAMT,GAAO,IAAAP,EAAA,OAAA/B,IAAAA,MAAA,SAAAgD,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA3C,KAAA,EAClBqB,EAAAA,EAAAA,IAAU,SAADtE,OAAUkF,EAAO,aAAaX,GAAQ,KAAD,EAAvD,OAARI,EAAQiB,EAAAzC,KAAAyC,EAAAhB,OAAA,SACPD,EAASE,KAAKgB,MAAI,wBAAAD,EAAApC,OAAA,GAAAmC,EAAA,KAC1B,gBAH0BG,GAAA,OAAAJ,EAAAjC,MAAA,KAAAC,UAAA,KAKdqC,EAAiB,eAAAC,GAAArD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAqD,EAAMf,GAAO,IAAAP,EAAA,OAAA/B,IAAAA,MAAA,SAAAsD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAAiD,EAAAjD,KAAA,EACrBqB,EAAAA,EAAAA,IAAU,SAADtE,OAAUkF,EAAO,aAAaX,GAAQ,KAAD,EAAvD,OAARI,EAAQuB,EAAA/C,KAAA+C,EAAAtB,OAAA,SACPD,EAASE,KAAKC,SAAO,wBAAAoB,EAAA1C,OAAA,GAAAyC,EAAA,KAC7B,gBAH6BE,GAAA,OAAAH,EAAAvC,MAAA,KAAAC,UAAA,I","sources":["components/MovieList/MoviesList.styled.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","service/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieListItem = styled.li`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n\n  margin: 0 auto;\n  padding: 4px;\n  margin-bottom: 30px;\n\n  max-width: 100%;\n  width: 260px;\n  height: 100%;\n\n  text-decoration: none;\n\n  border: none;\n  transform: scale(1);\n  border-radius: 8px;\n\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  backdrop-filter: blur(3.5px);\n  transition: box-shadow 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0px 2px 24px -5px rgba(0, 0, 0, 0.74);\n  }\n\n  img {\n    display: block;\n    height: 100%;\n    width: 100%;\n\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    transition: transform 250ms linear;\n    transform: scale(1);\n\n    object-fit: cover;\n    object-position: center;\n\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n`;\n\nexport const MoviePoster = styled.div`\n  margin-bottom: 10px;\n  overflow: hidden;\n`;\n\nexport const MovieTitle = styled.h2`\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 2px;\n  padding-right: 2px;\n  width: 100%;\n  color: black;\n  font-size: 12px;\n  font-weight: 400;\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Navigation, Pagination } from 'swiper/modules';\nimport { MovieListItem, MoviePoster, MovieTitle } from './MoviesList.styled';\nimport placeholder from '../images/placeholder.png';\n\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <Swiper\n      modules={[Navigation, Pagination]}\n      grabCursor={true}\n      centeredSlides={true}\n      loop={true}\n      slidesPerView={'auto'}\n      breakpoints={{\n        320: {\n          slidesPerView: 1,\n          spaceBetween: 0,\n        },\n        640: {\n          slidesPerView: 4,\n          spaceBetween: 20,\n        },\n        1040: {\n          slidesPerView: 5,\n          spaceBetween: 50,\n        },\n      }}\n      navigation\n      pagination={{ clickable: true }}\n    >\n      {films.map(movie => (\n        <SwiperSlide key={movie.id}>\n          <MovieListItem>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <MoviePoster>\n                <img\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/original${movie.poster_path}`\n                      : `url(${placeholder})`\n                  }\n                  alt={movie.original_title}\n                  width=\"200\"\n                />\n              </MoviePoster>\n              <MovieTitle> {movie.title} </MovieTitle>\n            </Link>\n          </MovieListItem>\n        </SwiperSlide>\n      ))}\n    </Swiper>\n  );\n};\nexport default MovieList;\n","import styled from 'styled-components';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 1.5rem;\n  padding: 0 16px;\n  flex-wrap: wrap;\n\n  input {\n    font-size: 1rem;\n    padding: 8px 32px 8px 8px;\n    width: 250px;\n    background-color: transparent;\n    border: none;\n    border-bottom: 2px solid #064e8a;\n    outline: none;\n  }\n`;\n\nexport const Icon = styled(FcSearch)`\n  width: 25px;\n  height: 25px;\n  position: relative;\n  right: 56px;\n  z-index: 1;\n  opacity: 0.7;\n`;\n","import { DebounceInput } from 'react-debounce-input';\nimport { Form, Icon } from './SearchForm.styled';\n\nexport const SearchForm = ({ value, onChange }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <h2>Movie Search</h2>\n      <DebounceInput\n        type=\"text\"\n        debounceTimeout={500}\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        placeholder=\"type here\"\n      />\n      <Icon />\n    </Form>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nimport { handleSearch } from 'service/Api';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') || '';\n  const [loading, setLoading] = useState(false);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' && { query };\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    const search = async () => {\n      try {\n        setLoading(true);\n        const movies = await handleSearch(movieName);\n        setSearchResults(movies);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    search();\n  }, [movieName]);\n\n  return (\n    <div>\n      <SkeletonTheme baseColor=\"#dddddd\" highlightColor=\"#a5a5a5\">\n        <SearchForm value={movieName} onChange={updateQueryString} />\n        {loading ? (\n          <Skeleton\n            count={15}\n            style={{ height: 30, width: 300, marginTop: 15 }}\n          />\n        ) : searchResults.length === 0 && movieName ? (\n          <h2>🔎 Nothing found</h2>\n        ) : (\n          <MovieList films={searchResults} />\n        )}\n      </SkeletonTheme>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'e7b36e8405bbad6431bbec2a24972d98';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};\n"],"names":["MovieListItem","styled","_templateObject","_taggedTemplateLiteral","MoviePoster","_templateObject2","MovieTitle","_templateObject3","_ref","films","location","useLocation","_jsx","Swiper","modules","Navigation","Pagination","grabCursor","centeredSlides","loop","slidesPerView","breakpoints","spaceBetween","navigation","pagination","clickable","children","map","movie","SwiperSlide","_jsxs","Link","to","concat","id","state","from","src","poster_path","placeholder","alt","original_title","width","title","Form","Icon","FcSearch","SearchForm","value","onChange","onSubmit","e","preventDefault","DebounceInput","type","debounceTimeout","target","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieName","get","_useState3","_useState4","loading","setLoading","useEffect","search","_asyncToGenerator","_regeneratorRuntime","_callee","movies","_context","prev","next","handleSearch","sent","t0","console","error","finish","stop","apply","arguments","SkeletonTheme","baseColor","highlightColor","query","Skeleton","count","style","height","marginTop","length","MovieList","axios","params","api_key","language","fetchTrendingMovies","response","abrupt","data","results","fetchMovieDetails","_ref2","_callee2","movieId","_context2","_x","_ref3","_callee3","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}